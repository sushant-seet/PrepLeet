class Solution:
    def productExceptSelf(self, nums: list[int]) -> list[int]:

        #O(n^2)
        # answer = [0]*len(nums)

        # for i, num in enumerate(nums):
        #     product = 1
        #     for j, num in enumerate(nums):
        #         if j !=i:
        #             product = product*nums[j]
            
        #     answer[i] = product

        # return answer  

        #O(n)
        n = len(nums)
        answer = [1] * n

        # First pass: Calculate prefix products
        prefix = 1
        for i in range(n):
            answer[i] = prefix
            prefix *= nums[i]

        # Second pass: Calculate suffix products and multiply with prefix products
        postfix = 1
        for i in range(n - 1, -1, -1):
            answer[i] *= postfix
            postfix *= nums[i]

        return answer
        





            
        